from typing import Any, Callable, Optional

class cached_property:
    fset: Any
    fdel: Any
    fget: Any
    def __init__(self, fget: Callable) -> None: ...
    def __get__(self, instance, type: Optional[Any] = ...): ...

class cached_readonly(cached_property):
    def __set__(self, instance, value) -> None: ...

def wrap_prop(ctx): ...
def monkey(cls, name: Optional[Any] = ...): ...

class namespace: ...

class LazyObject:
    def __init__(self, init) -> None: ...
    def _setup(self) -> None: ...
